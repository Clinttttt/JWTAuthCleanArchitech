@page "/counter"
@using JWTAuthCleanArchitech.Domain.DTOs
@using JWTAuthCleanArchitech.Domain.Entities
@using JWTAuthCleanArchitech.WebUI.Server.Services
@rendermode InteractiveServer
@inject NavigationManager navigationManager
@inject AuthApiService authservice


<EditForm Model="@user" OnValidSubmit="@Register" FormName="register">
    <div class="justify-content-center align-items-center">
        <div class="border-1 rounded-2 ">
            <input type="text" @bind="user.UserName" placeholder="Create Username" />
            <input type="password" @bind="user.Password" placeholder="Create Password" />
            <button type="submit">Create</button>
        </div>
    </div>

</EditForm>






@if (!string.IsNullOrEmpty(Error))
{
    <p class="text-danger">@Error</p>
}





@code{
    private  UserDto user = new();
    private string? Error { get; set; }

    private async Task Register()
    {
        var results = await authservice.RegisterAsync(user);
        if(results is null)
        {
            Error = "User already Exists";
        }
        else
        {
            navigationManager.NavigateTo("/login");
        }

    }
}
